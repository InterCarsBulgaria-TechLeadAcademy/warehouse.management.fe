/**
 * Generated by orval v6.29.1 üç∫
 * Do not edit manually.
 * WarehouseManagement.Api
 * OpenAPI spec version: 1.0
 */
import type {
  DeliveryDto,
  DeliveryDtoPageDto,
  DeliveryFormDto,
  DeliveryHistoryDto,
  DifferenceAdminCommentDto,
  DifferenceDto,
  DifferenceDtoPageDto,
  DifferenceFormDto,
  DifferenceTypeDto,
  DifferenceTypeFormDto,
  EntryDto,
  EntryDtoPageDto,
  EntryFormDto,
  EntrySplitDto,
  GetApiDeliveryAllParams,
  GetApiDifferenceAllParams,
  GetApiDifferenceAllWithDeletedParams,
  GetApiEntryAllParams,
  GetApiEntryAllWithDeletedParams,
  GetApiMarkerAllWithParamsParams,
  GetApiRoutePermissionAll200One,
  GetApiRoutePermissionAll200Three,
  GetApiRoutePermissionAll200Two,
  GetApiRoutePermissionAllWithDeleted200One,
  GetApiRoutePermissionAllWithDeleted200Three,
  GetApiRoutePermissionAllWithDeleted200Two,
  GetApiVendorAllParams,
  GetApiZoneAllWithParamsParams,
  GetApiZoneEntriesParams,
  LoginDto,
  MarkerDto,
  MarkerFormDto,
  PaginationParameters,
  PostApiDeliveryGenerateBarcodePdfParams,
  RegisterDto,
  RoleDetailsDto,
  RoleDto,
  RoleFormDto,
  RoleUserAssignDto,
  RoutePermissionDto,
  VendorDetailsDto,
  VendorDto,
  VendorFormDto,
  ZoneDetailsDto,
  ZoneDto,
  ZoneFormDto
} from './model'
import { customInstance } from './api'
import type { BodyType } from './api'

type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1]

export const getWarehouseManagementApi = () => {
  const postApiAuthLogin = (
    loginDto: BodyType<LoginDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Auth/login`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: loginDto
      },
      options
    )
  }

  const postApiAuthRegister = (
    registerDto: BodyType<RegisterDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<string>(
      {
        url: `/api/Auth/register`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: registerDto
      },
      options
    )
  }

  const postApiAuthRefresh = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<void>({ url: `/api/Auth/refresh`, method: 'POST' }, options)
  }

  const postApiAuthLogout = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<void>({ url: `/api/Auth/logout`, method: 'POST' }, options)
  }

  const getApiDeliveryId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<DeliveryDto>({ url: `/api/Delivery/${id}`, method: 'GET' }, options)
  }

  const getApiDeliveryAll = (
    params?: GetApiDeliveryAllParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<DeliveryDtoPageDto>(
      { url: `/api/Delivery/all`, method: 'GET', params },
      options
    )
  }

  const postApiDeliveryAdd = (
    deliveryFormDto: BodyType<DeliveryFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Delivery/add`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: deliveryFormDto
      },
      options
    )
  }

  const putApiDeliveryEditId = (
    id: number,
    deliveryFormDto: BodyType<DeliveryFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Delivery/edit/${id}`,
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        data: deliveryFormDto
      },
      options
    )
  }

  const deleteApiDeliveryDeleteId = (
    id: number,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>({ url: `/api/Delivery/delete/${id}`, method: 'DELETE' }, options)
  }

  const putApiDeliveryRestoreId = (
    id: number,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>({ url: `/api/Delivery/restore/${id}`, method: 'PUT' }, options)
  }

  const getApiDeliveryAllDeleted = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<DeliveryDto[]>(
      { url: `/api/Delivery/all-deleted`, method: 'GET' },
      options
    )
  }

  const getApiDeliveryHistoryId = (
    id: number,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<DeliveryHistoryDto>(
      { url: `/api/Delivery/history/${id}`, method: 'GET' },
      options
    )
  }

  const putApiDeliveryApproveId = (
    id: number,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<VendorDto[]>(
      { url: `/api/Delivery/Approve/${id}`, method: 'PUT' },
      options
    )
  }

  const postApiDeliveryGenerateBarcodePdf = (
    params?: PostApiDeliveryGenerateBarcodePdfParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      { url: `/api/Delivery/GenerateBarcodePdf`, method: 'POST', params },
      options
    )
  }

  const getApiDifferenceAll = (
    params?: GetApiDifferenceAllParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<DifferenceDtoPageDto>(
      { url: `/api/Difference/all`, method: 'GET', params },
      options
    )
  }

  const getApiDifferenceAllWithDeleted = (
    params?: GetApiDifferenceAllWithDeletedParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<DifferenceDtoPageDto>(
      { url: `/api/Difference/all-with-deleted`, method: 'GET', params },
      options
    )
  }

  const getApiDifferenceId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<DifferenceDto>({ url: `/api/Difference/${id}`, method: 'GET' }, options)
  }

  const postApiDifferenceAdd = (
    differenceFormDto: BodyType<DifferenceFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Difference/add`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: differenceFormDto
      },
      options
    )
  }

  const putApiDifferenceEditId = (
    id: number,
    differenceFormDto: BodyType<DifferenceFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Difference/edit/${id}`,
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        data: differenceFormDto
      },
      options
    )
  }

  const deleteApiDifferenceDeleteId = (
    id: number,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>({ url: `/api/Difference/delete/${id}`, method: 'DELETE' }, options)
  }

  const patchApiDifferenceRestoreId = (
    id: number,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>({ url: `/api/Difference/restore/${id}`, method: 'PATCH' }, options)
  }

  const postApiDifferenceStartId = (
    id: number,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>({ url: `/api/Difference/start/${id}`, method: 'POST' }, options)
  }

  const postApiDifferenceFinishId = (
    id: number,
    differenceAdminCommentDto: BodyType<DifferenceAdminCommentDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Difference/finish/${id}`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: differenceAdminCommentDto
      },
      options
    )
  }

  const postApiDifferenceNoDifferencesId = (
    id: number,
    differenceAdminCommentDto: BodyType<DifferenceAdminCommentDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Difference/noDifferences/${id}`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: differenceAdminCommentDto
      },
      options
    )
  }

  const getApiDifferenceTypeAll = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<DifferenceTypeDto[]>(
      { url: `/api/DifferenceType/all`, method: 'GET' },
      options
    )
  }

  const getApiDifferenceTypeAllWithDeleted = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<DifferenceTypeDto[]>(
      { url: `/api/DifferenceType/all-with-deleted`, method: 'GET' },
      options
    )
  }

  const getApiDifferenceTypeId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<DifferenceTypeDto>(
      { url: `/api/DifferenceType/${id}`, method: 'GET' },
      options
    )
  }

  const postApiDifferenceTypeAdd = (
    differenceTypeFormDto: BodyType<DifferenceTypeFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/DifferenceType/add`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: differenceTypeFormDto
      },
      options
    )
  }

  const putApiDifferenceTypeEditId = (
    id: number,
    differenceTypeFormDto: BodyType<DifferenceTypeFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/DifferenceType/edit/${id}`,
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        data: differenceTypeFormDto
      },
      options
    )
  }

  const deleteApiDifferenceTypeDeleteId = (
    id: number,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      { url: `/api/DifferenceType/delete/${id}`, method: 'DELETE' },
      options
    )
  }

  const putApiDifferenceTypeRestoreId = (
    id: number,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      { url: `/api/DifferenceType/restore/${id}`, method: 'PUT' },
      options
    )
  }

  const getApiEntryAll = (
    params?: GetApiEntryAllParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<EntryDtoPageDto>(
      { url: `/api/Entry/all`, method: 'GET', params },
      options
    )
  }

  const getApiEntryId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<EntryDto>({ url: `/api/Entry/${id}`, method: 'GET' }, options)
  }

  const getApiEntryAllWithDeleted = (
    params?: GetApiEntryAllWithDeletedParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<EntryDto[]>(
      { url: `/api/Entry/all-with-deleted`, method: 'GET', params },
      options
    )
  }

  const postApiEntryAdd = (
    entryFormDto: EntryFormDto[],
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Entry/add`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: entryFormDto
      },
      options
    )
  }

  const putApiEntryEditId = (
    id: number,
    entryFormDto: BodyType<EntryFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Entry/edit/${id}`,
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        data: entryFormDto
      },
      options
    )
  }

  const deleteApiEntryDeleteId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<void>({ url: `/api/Entry/delete/${id}`, method: 'DELETE' }, options)
  }

  const putApiEntryRestoreId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<void>({ url: `/api/Entry/restore/${id}`, method: 'PUT' }, options)
  }

  const putApiEntryStartId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<void>({ url: `/api/Entry/start/${id}`, method: 'PUT' }, options)
  }

  const putApiEntryFinishId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<void>({ url: `/api/Entry/finish/${id}`, method: 'PUT' }, options)
  }

  const postApiEntryMoveId = (
    id: BodyType<number>,
    postApiEntryMoveIdBody: number,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Entry/move/${id}`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: postApiEntryMoveIdBody
      },
      options
    )
  }

  const postApiEntrySplitId = (
    id: number,
    entrySplitDto: BodyType<EntrySplitDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Entry/split/${id}`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: entrySplitDto
      },
      options
    )
  }

  const getApiMarkerId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<MarkerDto>({ url: `/api/Marker/${id}`, method: 'GET' }, options)
  }

  const getApiMarkerAll = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<MarkerDto[]>({ url: `/api/Marker/all`, method: 'GET' }, options)
  }

  const getApiMarkerAllWithParams = (
    params?: GetApiMarkerAllWithParamsParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<MarkerDto[]>(
      { url: `/api/Marker/all-with-params`, method: 'GET', params },
      options
    )
  }

  const postApiMarkerAdd = (
    markerFormDto: BodyType<MarkerFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Marker/add`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: markerFormDto
      },
      options
    )
  }

  const putApiMarkerEditId = (
    id: number,
    markerFormDto: BodyType<MarkerFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Marker/edit/${id}`,
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        data: markerFormDto
      },
      options
    )
  }

  const deleteApiMarkerDeleteId = (
    id: number,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>({ url: `/api/Marker/delete/${id}`, method: 'DELETE' }, options)
  }

  const putApiMarkerRestoreId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<void>({ url: `/api/Marker/restore/${id}`, method: 'PUT' }, options)
  }

  const getApiMarkerDeleted = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<MarkerDto[]>({ url: `/api/Marker/deleted`, method: 'GET' }, options)
  }

  const postApiRoleAddToRole = (
    roleUserAssignDto: BodyType<RoleUserAssignDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Role/add-to-role`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: roleUserAssignDto
      },
      options
    )
  }

  const postApiRoleCreate = (
    roleFormDto: BodyType<RoleFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Role/create`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: roleFormDto
      },
      options
    )
  }

  const putApiRoleEditId = (
    id: string,
    roleFormDto: BodyType<RoleFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Role/edit/${id}`,
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        data: roleFormDto
      },
      options
    )
  }

  const deleteApiRoleDeleteId = (id: string, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<void>({ url: `/api/Role/delete/${id}`, method: 'DELETE' }, options)
  }

  const getApiRoleAll = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<RoleDetailsDto[]>({ url: `/api/Role/all`, method: 'GET' }, options)
  }

  const getApiRoleId = (id: string, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<RoleDto>({ url: `/api/Role/${id}`, method: 'GET' }, options)
  }

  const getApiRoutePermissionAll = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<
      | GetApiRoutePermissionAll200One
      | GetApiRoutePermissionAll200Two
      | GetApiRoutePermissionAll200Three
    >({ url: `/api/RoutePermission/all`, method: 'GET' }, options)
  }

  const getApiRoutePermissionAllWithDeleted = (
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<
      | GetApiRoutePermissionAllWithDeleted200One
      | GetApiRoutePermissionAllWithDeleted200Two
      | GetApiRoutePermissionAllWithDeleted200Three
    >({ url: `/api/RoutePermission/all-with-deleted`, method: 'GET' }, options)
  }

  const getApiRoutePermissionId = (
    id: string,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<RoutePermissionDto>(
      { url: `/api/RoutePermission/${id}`, method: 'GET' },
      options
    )
  }

  const deleteApiRoutePermissionDeleteId = (
    id: string,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      { url: `/api/RoutePermission/delete/${id}`, method: 'DELETE' },
      options
    )
  }

  const getApiUserMe = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<void>({ url: `/api/User/me`, method: 'GET' }, options)
  }

  const getApiVendorId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<VendorDetailsDto>({ url: `/api/Vendor/${id}`, method: 'GET' }, options)
  }

  const getApiVendorAll = (
    params?: GetApiVendorAllParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<VendorDto[]>({ url: `/api/Vendor/all`, method: 'GET', params }, options)
  }

  const postApiVendorAdd = (
    vendorFormDto: BodyType<VendorFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Vendor/add`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: vendorFormDto
      },
      options
    )
  }

  const putApiVendorEditId = (
    id: number,
    vendorFormDto: BodyType<VendorFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Vendor/edit/${id}`,
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        data: vendorFormDto
      },
      options
    )
  }

  const deleteApiVendorDeleteId = (
    id: number,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>({ url: `/api/Vendor/delete/${id}`, method: 'DELETE' }, options)
  }

  const putApiVendorRestoreId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<void>({ url: `/api/Vendor/restore/${id}`, method: 'PUT' }, options)
  }

  const getApiVendorAllDeleted = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<VendorDto[]>({ url: `/api/Vendor/all-deleted`, method: 'GET' }, options)
  }

  const getApiZoneId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<ZoneDetailsDto>({ url: `/api/Zone/${id}`, method: 'GET' }, options)
  }

  const getApiZoneAll = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<ZoneDto[]>({ url: `/api/Zone/all`, method: 'GET' }, options)
  }

  const getApiZoneAllWithParams = (
    params?: GetApiZoneAllWithParamsParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<ZoneDto[]>(
      { url: `/api/Zone/all-with-params`, method: 'GET', params },
      options
    )
  }

  const postApiZoneAdd = (
    zoneFormDto: BodyType<ZoneFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Zone/add`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: zoneFormDto
      },
      options
    )
  }

  const putApiZoneEditId = (
    id: number,
    zoneFormDto: BodyType<ZoneFormDto>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<void>(
      {
        url: `/api/Zone/edit/${id}`,
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        data: zoneFormDto
      },
      options
    )
  }

  const deleteApiZoneDeleteId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<void>({ url: `/api/Zone/delete/${id}`, method: 'DELETE' }, options)
  }

  const putApiZoneRestoreId = (id: number, options?: SecondParameter<typeof customInstance>) => {
    return customInstance<void>({ url: `/api/Zone/restore/${id}`, method: 'PUT' }, options)
  }

  const getApiZoneAllWithDeleted = (options?: SecondParameter<typeof customInstance>) => {
    return customInstance<ZoneDto[]>({ url: `/api/Zone/all-with-deleted`, method: 'GET' }, options)
  }

  const getApiZoneAllWithDeletedWithParams = (
    paginationParameters: BodyType<PaginationParameters>,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<ZoneDto[]>(
      {
        url: `/api/Zone/all-with-deleted-with-params`,
        method: 'GET',
        headers: { 'Content-Type': 'application/json' }
      },
      options
    )
  }

  const getApiZoneEntries = (
    params?: GetApiZoneEntriesParams,
    options?: SecondParameter<typeof customInstance>
  ) => {
    return customInstance<EntryDtoPageDto>(
      { url: `/api/Zone/entries`, method: 'GET', params },
      options
    )
  }

  return {
    postApiAuthLogin,
    postApiAuthRegister,
    postApiAuthRefresh,
    postApiAuthLogout,
    getApiDeliveryId,
    getApiDeliveryAll,
    postApiDeliveryAdd,
    putApiDeliveryEditId,
    deleteApiDeliveryDeleteId,
    putApiDeliveryRestoreId,
    getApiDeliveryAllDeleted,
    getApiDeliveryHistoryId,
    putApiDeliveryApproveId,
    postApiDeliveryGenerateBarcodePdf,
    getApiDifferenceAll,
    getApiDifferenceAllWithDeleted,
    getApiDifferenceId,
    postApiDifferenceAdd,
    putApiDifferenceEditId,
    deleteApiDifferenceDeleteId,
    patchApiDifferenceRestoreId,
    postApiDifferenceStartId,
    postApiDifferenceFinishId,
    postApiDifferenceNoDifferencesId,
    getApiDifferenceTypeAll,
    getApiDifferenceTypeAllWithDeleted,
    getApiDifferenceTypeId,
    postApiDifferenceTypeAdd,
    putApiDifferenceTypeEditId,
    deleteApiDifferenceTypeDeleteId,
    putApiDifferenceTypeRestoreId,
    getApiEntryAll,
    getApiEntryId,
    getApiEntryAllWithDeleted,
    postApiEntryAdd,
    putApiEntryEditId,
    deleteApiEntryDeleteId,
    putApiEntryRestoreId,
    putApiEntryStartId,
    putApiEntryFinishId,
    postApiEntryMoveId,
    postApiEntrySplitId,
    getApiMarkerId,
    getApiMarkerAll,
    getApiMarkerAllWithParams,
    postApiMarkerAdd,
    putApiMarkerEditId,
    deleteApiMarkerDeleteId,
    putApiMarkerRestoreId,
    getApiMarkerDeleted,
    postApiRoleAddToRole,
    postApiRoleCreate,
    putApiRoleEditId,
    deleteApiRoleDeleteId,
    getApiRoleAll,
    getApiRoleId,
    getApiRoutePermissionAll,
    getApiRoutePermissionAllWithDeleted,
    getApiRoutePermissionId,
    deleteApiRoutePermissionDeleteId,
    getApiUserMe,
    getApiVendorId,
    getApiVendorAll,
    postApiVendorAdd,
    putApiVendorEditId,
    deleteApiVendorDeleteId,
    putApiVendorRestoreId,
    getApiVendorAllDeleted,
    getApiZoneId,
    getApiZoneAll,
    getApiZoneAllWithParams,
    postApiZoneAdd,
    putApiZoneEditId,
    deleteApiZoneDeleteId,
    putApiZoneRestoreId,
    getApiZoneAllWithDeleted,
    getApiZoneAllWithDeletedWithParams,
    getApiZoneEntries
  }
}
export type PostApiAuthLoginResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiAuthLogin']>>
>
export type PostApiAuthRegisterResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiAuthRegister']>>
>
export type PostApiAuthRefreshResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiAuthRefresh']>>
>
export type PostApiAuthLogoutResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiAuthLogout']>>
>
export type GetApiDeliveryIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiDeliveryId']>>
>
export type GetApiDeliveryAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiDeliveryAll']>>
>
export type PostApiDeliveryAddResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiDeliveryAdd']>>
>
export type PutApiDeliveryEditIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiDeliveryEditId']>>
>
export type DeleteApiDeliveryDeleteIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['deleteApiDeliveryDeleteId']>>
>
export type PutApiDeliveryRestoreIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiDeliveryRestoreId']>>
>
export type GetApiDeliveryAllDeletedResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiDeliveryAllDeleted']>>
>
export type GetApiDeliveryHistoryIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiDeliveryHistoryId']>>
>
export type PutApiDeliveryApproveIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiDeliveryApproveId']>>
>
export type PostApiDeliveryGenerateBarcodePdfResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiDeliveryGenerateBarcodePdf']>
  >
>
export type GetApiDifferenceAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiDifferenceAll']>>
>
export type GetApiDifferenceAllWithDeletedResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiDifferenceAllWithDeleted']>
  >
>
export type GetApiDifferenceIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiDifferenceId']>>
>
export type PostApiDifferenceAddResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiDifferenceAdd']>>
>
export type PutApiDifferenceEditIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiDifferenceEditId']>>
>
export type DeleteApiDifferenceDeleteIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['deleteApiDifferenceDeleteId']>>
>
export type PatchApiDifferenceRestoreIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['patchApiDifferenceRestoreId']>>
>
export type PostApiDifferenceStartIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiDifferenceStartId']>>
>
export type PostApiDifferenceFinishIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiDifferenceFinishId']>>
>
export type PostApiDifferenceNoDifferencesIdResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiDifferenceNoDifferencesId']>
  >
>
export type GetApiDifferenceTypeAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiDifferenceTypeAll']>>
>
export type GetApiDifferenceTypeAllWithDeletedResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiDifferenceTypeAllWithDeleted']>
  >
>
export type GetApiDifferenceTypeIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiDifferenceTypeId']>>
>
export type PostApiDifferenceTypeAddResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiDifferenceTypeAdd']>>
>
export type PutApiDifferenceTypeEditIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiDifferenceTypeEditId']>>
>
export type DeleteApiDifferenceTypeDeleteIdResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getWarehouseManagementApi>['deleteApiDifferenceTypeDeleteId']>
  >
>
export type PutApiDifferenceTypeRestoreIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiDifferenceTypeRestoreId']>>
>
export type GetApiEntryAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiEntryAll']>>
>
export type GetApiEntryIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiEntryId']>>
>
export type GetApiEntryAllWithDeletedResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiEntryAllWithDeleted']>>
>
export type PostApiEntryAddResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiEntryAdd']>>
>
export type PutApiEntryEditIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiEntryEditId']>>
>
export type DeleteApiEntryDeleteIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['deleteApiEntryDeleteId']>>
>
export type PutApiEntryRestoreIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiEntryRestoreId']>>
>
export type PutApiEntryStartIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiEntryStartId']>>
>
export type PutApiEntryFinishIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiEntryFinishId']>>
>
export type PostApiEntryMoveIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiEntryMoveId']>>
>
export type PostApiEntrySplitIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiEntrySplitId']>>
>
export type GetApiMarkerIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiMarkerId']>>
>
export type GetApiMarkerAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiMarkerAll']>>
>
export type GetApiMarkerAllWithParamsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiMarkerAllWithParams']>>
>
export type PostApiMarkerAddResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiMarkerAdd']>>
>
export type PutApiMarkerEditIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiMarkerEditId']>>
>
export type DeleteApiMarkerDeleteIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['deleteApiMarkerDeleteId']>>
>
export type PutApiMarkerRestoreIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiMarkerRestoreId']>>
>
export type GetApiMarkerDeletedResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiMarkerDeleted']>>
>
export type PostApiRoleAddToRoleResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiRoleAddToRole']>>
>
export type PostApiRoleCreateResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiRoleCreate']>>
>
export type PutApiRoleEditIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiRoleEditId']>>
>
export type DeleteApiRoleDeleteIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['deleteApiRoleDeleteId']>>
>
export type GetApiRoleAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiRoleAll']>>
>
export type GetApiRoleIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiRoleId']>>
>
export type GetApiRoutePermissionAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiRoutePermissionAll']>>
>
export type GetApiRoutePermissionAllWithDeletedResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiRoutePermissionAllWithDeleted']>
  >
>
export type GetApiRoutePermissionIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiRoutePermissionId']>>
>
export type DeleteApiRoutePermissionDeleteIdResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getWarehouseManagementApi>['deleteApiRoutePermissionDeleteId']>
  >
>
export type GetApiUserMeResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiUserMe']>>
>
export type GetApiVendorIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiVendorId']>>
>
export type GetApiVendorAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiVendorAll']>>
>
export type PostApiVendorAddResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiVendorAdd']>>
>
export type PutApiVendorEditIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiVendorEditId']>>
>
export type DeleteApiVendorDeleteIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['deleteApiVendorDeleteId']>>
>
export type PutApiVendorRestoreIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiVendorRestoreId']>>
>
export type GetApiVendorAllDeletedResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiVendorAllDeleted']>>
>
export type GetApiZoneIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiZoneId']>>
>
export type GetApiZoneAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiZoneAll']>>
>
export type GetApiZoneAllWithParamsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiZoneAllWithParams']>>
>
export type PostApiZoneAddResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['postApiZoneAdd']>>
>
export type PutApiZoneEditIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiZoneEditId']>>
>
export type DeleteApiZoneDeleteIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['deleteApiZoneDeleteId']>>
>
export type PutApiZoneRestoreIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['putApiZoneRestoreId']>>
>
export type GetApiZoneAllWithDeletedResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiZoneAllWithDeleted']>>
>
export type GetApiZoneAllWithDeletedWithParamsResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiZoneAllWithDeletedWithParams']>
  >
>
export type GetApiZoneEntriesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getWarehouseManagementApi>['getApiZoneEntries']>>
>
